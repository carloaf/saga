# =============================================================================
# Docker Compose - Development Environment
# Para produção: usar deploy/production/docker-compose.prod.yml
# Para staging: usar deploy/staging/docker-compose.staging.yml  
# =============================================================================

services:
    app:
        # Para forçar uma arquitetura específica durante desenvolvimento
        # descomente a linha abaixo (ex: linux/amd64 em hosts Apple Silicon)
        # platform: ${APP_PLATFORM}
        build:
            context: .
            dockerfile: Dockerfile
            target: runtime
            # Args expostos para buildx (opcional – buildx injeta automaticamente)
            # args:
            # BUILDPLATFORM: ${BUILDPLATFORM}
            # TARGETPLATFORM: ${TARGETPLATFORM}
        image: saga/app:dev
        container_name: saga_app_dev
        restart: unless-stopped
        working_dir: /var/www/html
        volumes:
            - ./:/var/www/html # Development: mount source for live editing
        networks:
            - saga_network
        depends_on:
            - database
        ports:
            - "8000:80"
        environment:
            - APP_ENV=local
            - APP_DEBUG=true
            - PHP_EXTENSIONS=pdo_pgsql,pgsql,gd,zip,bcmath,exif,intl

    database:
        image: postgres:16-alpine
        container_name: saga_db
        restart: unless-stopped
        environment:
            POSTGRES_DB: saga
            POSTGRES_USER: saga_user
            POSTGRES_PASSWORD: saga_password
            PGDATA: /var/lib/postgresql/data/pgdata
        volumes:
            - postgres_data:/var/lib/postgresql/data
        networks:
            - saga_network
        ports:
            - "5432:5432"

    redis:
        image: redis:7-alpine
        container_name: saga_redis
        restart: unless-stopped
        networks:
            - saga_network
        ports:
            - "6379:6379"

    mcp:
        image: node:20-alpine
        container_name: saga_mcp
        working_dir: /workspace
        restart: unless-stopped
        volumes:
            - ./:/workspace
        environment:
            - DB_HOST=database
            - DB_PORT=5432
            - DB_DATABASE=saga
            - DB_USERNAME=saga_user
            - DB_PASSWORD=saga_password
            - MCP_PORT=3030
        command: sh -c "cd mcp && npm install --no-audit --no-fund && npm run start:docker"
        depends_on:
            - database
        networks:
            - saga_network
        ports:
            - "3030:3030"

networks:
    saga_network:
        driver: bridge

volumes:
    postgres_data:
